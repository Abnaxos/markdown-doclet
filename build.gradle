/*
 * Copyright 2013-2016 Raffael Herzog, Marko Umek
 *
 * This file is part of pegdown-doclet.
 *
 * pegdown-doclet is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * pegdown-doclet is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with pegdown-doclet.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

apply plugin:'wrapper'

wrapper {
    gradleVersion = '2.12'
}

ext.componentBaseVersion = '1.3'
ext.docletBaseVersion = '1.4'
def snapshot(boolean snapshot) {
    return snapshot ? '-SNAPSHOT' : ''
}

allprojects {
    group = 'ch.raffael.pegdown-doclet'
    buildDir = 'target'
    version = docletBaseVersion + snapshot(true)
}

subprojects {

    if ( !file('src').isDirectory() ) {
        return
    }

    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'idea'

    repositories {
        mavenLocal()
        jcenter()
    }

    sourceSets {
        main {
            output.resourcesDir = output.classesDir
        }
        test {
            output.resourcesDir = output.classesDir
        }
    }

    dependencies {
        testCompile group:'org.codehaus.groovy', name:'groovy-all', version:'2.4.6'
        testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
            exclude group:'org.codehaus.groovy'
        }
        testCompile group:'cglib', name:'cglib-nodep', version:'3.1'
    }
    configurations { testCompile.extendsFrom compileOnly }
    ext {
        libs = [
                pegdown : [group: 'org.pegdown', name: 'pegdown', version: '1.6.0'],
                guava   : [group: 'com.google.guava', name: 'guava', version: '18.0'],
                plantuml: [group: 'net.sourceforge.plantuml', name: 'plantuml', version: '8032'],
                github:   [group: 'org.kohsuke', name: 'github-api', version: '1.76'],
                findbugs:  [group: 'com.google.code.findbugs', name : 'findbugs-annotations', version :'3.0.1'],
                okhttp:   [group: 'com.squareup.okhttp', name: 'okhttp-urlconnection', version: '2.7.5'],
                jakartaCommonsLang3:   [group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'],
                velocity:   [group: 'org.apache.velocity', name: 'velocity', version: '1.7'],
                jdkTools: files("${System.properties['java.home']}/../lib/tools.jar"),
        ]
        docletProject = project(':doclet')
    }

    sourceCompatibility = '1.7'
    if ( !project == rootProject ) {
        archivesBaseName += "-${project.name}"
    }

    processResources {
        //noinspection UnnecessaryQualifiedReference
        filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
                "pegdown-doclet-version": project(':doclet').version
        ]
    }

    jar {
        // needed for unified classes/resources output dir
        // if this is missing, all classes and resources are included twice
        duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.EXCLUDE
    }

    javadoc.dependsOn classes
    afterEvaluate {
        javadoc {
            classpath += configurations.compileOnly
            options {
                locale 'en'
                docletpath = (sourceSets.main.output + sourceSets.main.compileClasspath) as List
                doclet = 'ch.raffael.doclets.pegdown.PegdownDoclet'
                def overviewFile = file('src/main/javadoc/overview.md')
                if ( overviewFile.exists() ) {
                    file('src/main/javadoc/overview.md')
                }
                linkSource = true
                links = [
                        'http://docs.oracle.com/javase/7/docs/api/',
                        'http://docs.oracle.com/javase/7/docs/jdk/api/javadoc/doclet',
                        'http://www.decodified.com/pegdown/api'
                ]
//                addStringOption 'javadocversion', 'v7'
                footer = """
              <a href="https://github.com/Abnaxos/pegdown-doclet/" target="_top">
                <img style="position: absolute; top: 0; right: 0; border: 0;" src="https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png" alt="Fork me on GitHub">
              </a>
              """
            }
        }
    }

    idea.module {
        inheritOutputDirs = false
    }
}
